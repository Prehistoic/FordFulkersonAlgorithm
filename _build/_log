### Starting build.
# Target: ftest.ml.depends, tags: { extension:ml, file:ftest.ml, ocaml, ocamldep, quiet }
/home/commetud/GEI/OCaml/.opam/4.08.1/bin/ocamldep.opt -modules ftest.ml > ftest.ml.depends # cached
# Target: ford_fulkerson.mli.depends, tags: { extension:mli, file:ford_fulkerson.mli, ocaml, ocamldep, quiet }
/home/commetud/GEI/OCaml/.opam/4.08.1/bin/ocamldep.opt -modules ford_fulkerson.mli > ford_fulkerson.mli.depends
# Target: graph.mli.depends, tags: { extension:mli, file:graph.mli, ocaml, ocamldep, quiet }
/home/commetud/GEI/OCaml/.opam/4.08.1/bin/ocamldep.opt -modules graph.mli > graph.mli.depends # cached
# Target: graph.cmi, tags: { byte, compile, extension:mli, file:graph.mli, interf, ocaml, quiet }
/home/commetud/GEI/OCaml/.opam/4.08.1/bin/ocamlc.opt -c -o graph.cmi graph.mli # cached
# Target: gfile.mli.depends, tags: { extension:mli, file:gfile.mli, ocaml, ocamldep, quiet }
/home/commetud/GEI/OCaml/.opam/4.08.1/bin/ocamldep.opt -modules gfile.mli > gfile.mli.depends # cached
# Target: gfile.cmi, tags: { byte, compile, extension:mli, file:gfile.mli, interf, ocaml, quiet }
/home/commetud/GEI/OCaml/.opam/4.08.1/bin/ocamlc.opt -c -o gfile.cmi gfile.mli # cached
# Target: tools.mli.depends, tags: { extension:mli, file:tools.mli, ocaml, ocamldep, quiet }
/home/commetud/GEI/OCaml/.opam/4.08.1/bin/ocamldep.opt -modules tools.mli > tools.mli.depends # cached
# Target: tools.cmi, tags: { byte, compile, extension:mli, file:tools.mli, interf, ocaml, quiet }
/home/commetud/GEI/OCaml/.opam/4.08.1/bin/ocamlc.opt -c -o tools.cmi tools.mli # cached
# Target: ford_fulkerson.cmi, tags: { byte, compile, extension:mli, file:ford_fulkerson.mli, interf, ocaml, quiet }
/home/commetud/GEI/OCaml/.opam/4.08.1/bin/ocamlc.opt -c -o ford_fulkerson.cmi ford_fulkerson.mli
+ /home/commetud/GEI/OCaml/.opam/4.08.1/bin/ocamlc.opt -c -o ford_fulkerson.cmi ford_fulkerson.mli
File "ford_fulkerson.mli", line 7, characters 26-41:
7 | val init: string graph -> (int,int) graph
                              ^^^^^^^^^^^^^^^
Error: The type constructor graph expects 1 argument(s),
       but is here applied to 2 argument(s)
Command exited with code 2.
# Compilation unsuccessful.
